<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shadydude</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>distance = 30;
posx = ds_list_create()
posy = ds_list_create()
scale = ds_list_create()
index = ds_list_create()
speeda = ds_list_create()
vsp = ds_list_create();
display_sprite = spr_shadydude;
jump_sprite = spr_shadydude_jump;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(par_player) &amp;&amp; !(global.dialog = 1 &amp;&amp; room = level4) ) {
ds_list_add(posx, par_player.x);
ds_list_add(posy, par_player.y);
ds_list_add(scale, par_player.facing);
ds_list_add(index, par_player.image_index);
ds_list_add(speeda, par_player.image_speed);
if(instance_exists(obj_luke) || instance_exists(obj_midgamedurango)) {
    ds_list_add(vsp,par_player.vsp);
}
if(ds_list_size(posx)==distance) {
    
    ds_list_delete(posx,0);
    ds_list_delete(posy,0);
     ds_list_delete(scale,0);
    ds_list_delete(index,0);   
    ds_list_delete(speeda,0);
    ds_list_delete(vsp,0);
}
x = ds_list_find_value(posx,0);
y = ds_list_find_value(posy,0);
image_speed = ds_list_find_value(speeda,0);
image_index = ds_list_find_value(index,0);
image_xscale = ds_list_find_value(scale,0);
sprite_index = display_sprite;
if(ds_list_find_value(vsp,0) &lt; 0) {
         image_speed = 0;
         sprite_index = jump_sprite;
         image_index = 1;
}
else if(ds_list_find_value(vsp,0) &gt; 0){
         image_speed = 0;
         sprite_index = jump_sprite;
         image_index = 0;
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
