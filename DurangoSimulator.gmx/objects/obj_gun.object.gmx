<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoottimer = 0;
image_speed = 0;
reloadtimer = 0;
steps = 0;
reloadtime = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(par_player)) {
if(shoottimer &gt; 0) shoottimer--;
if(reloadtimer &gt; 0) reloadtimer--;
x = par_player.x
y = par_player.y-32
image_angle = point_direction(x,y,obj_crosshair.x,obj_crosshair.y);
if( instance_exists(obj_luke) || instance_exists(obj_midgamedurango)) {
if(global.dialog == 0 &amp;&amp; (mouse_check_button_pressed(mb_left) | keyboard_check_pressed(ord('C')))) {
    if(shoottimer == 0 &amp;&amp; global.loaded &gt; 0 &amp;&amp; !reloadtime) {
    inst = instance_create(x,y,obj_fireball)
    with(inst) {
    speed = 10;
    direction = point_direction(x,y,obj_crosshair.x,obj_crosshair.y);
    audio_play_sound(sound77_Shotgun_Sound_Effects,0,false);
    global.loaded--;
    }
    shoottimer = 5;
    }
}
if((global.loaded &lt;= 0 &amp;&amp; global.ammo &gt; 0) || (keyboard_check_pressed(ord("A")) &amp;&amp; global.loaded &lt; 6)) {
reloadtime = true;
}
if(reloadtime) {
    if(global.ammo &gt; 0 &amp;&amp; global.loaded &lt; 6) {
        if( reloadtimer &lt;= 0) {
            reloadtimer +=10
            global.loaded++;
            global.ammo--;
            audio_play_sound(sound78_reload,0,false);
        }
    }
   else {
    reloadtime = false;
    audio_play_sound(sound79_reloaded,0,false);
    } 
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
